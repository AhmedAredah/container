from typing import List, Dict

class Package:
    def __init__(self, id: str) -> None: ...
    def __init__(self, json_dict: Dict) -> None: ...
    def get_package_id(self) -> str: ...
    def set_package_id(self, id: str) -> None: ...
    def to_json(self) -> Dict: ...

class Container:
    def __init__(self, id: str, size: int) -> None: ...
    def __init__(self, json_dict: Dict) -> None: ...
    def get_container_id(self) -> str: ...
    def set_container_id(self, id: str) -> None: ...
    def get_container_size(self) -> int: ...
    def set_container_size(self, size: int) -> None: ...
    def add_package(self, package: Package) -> None: ...
    def add_custom_variable(self, hauler: int, key: str, value: str) -> None: ...
    def add_custom_variable(self, hauler: int, key: str, value: int) -> None: ...
    def add_custom_variable(self, hauler: int, key: str, value: float) -> None: ...
    def remove_custom_variable(self, hauler: int, key: str) -> None: ...
    def get_custom_variable(self, hauler: int, key: str) -> str: ...
    def set_container_current_location(self, location: str) -> None: ...
    def get_container_current_location(self) -> str: ...
    def set_container_next_destinations(self, destinations: List[str]) -> None: ...
    def get_container_next_destinations(self) -> List[str]: ...
    def set_container_movement_history(self, history: List[str]) -> None: ...
    def get_container_movement_history(self) -> List[str]: ...
    def to_json(self) -> Dict: ...

class ContainerMap:
    def __init__(self) -> None: ...
    def __init__(self, dbLocation: str) -> None: ...
    def __init__(self, json_dict: Dict) -> None: ...
    def add_container(self, container: Container, addingTime: float = float('nan')) -> None: ...
    def add_containers(self, containers: List[Container], addingTime: float = float('nan')) -> None: ...
    def add_containers_from_dict(self, json_dict: Dict, addingTime: float = float('nan')) -> None: ...
    def get_container(self, id: str) -> Container: ...
    def remove_container(self, id: str) -> None: ...
    def get_all_containers(self) -> List[Container]: ...
    def get_latest_containers(self) -> List[Container]: ...
    def size(self) -> int: ...
    def get_containers_by_added_time(self, referenceTime: float, condition: str) -> List[Container]: ...
    def dequeue_containers_by_added_time(self, referenceTime: float, condition: str) -> List[Container]: ...
    def get_containers_by_next_destination(self, destination: str) -> List[Container]: ...
    def dequeue_containers_by_next_destination(self, destination: str) -> List[Container]: ...
    def to_json(self) -> Dict: ...
